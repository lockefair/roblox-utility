[{"title":"Roblox Utility","type":0,"sectionRef":"#","url":"/roblox-utility/docs/intro","content":"Roblox Utility A collection of utility modules that can be used to enhance your Roblox game development experience. Installation To install the packages in this repository you can use the Wally package manager. After installing Wally, navigate to your project directory and run wally init – this will generate the wally.toml file. You can add the roblox-utility modules to the generated wally.toml file as dependencies. After adding the modules to your dependecy list, run wally install. Wally will subsequently generate a Packages folder in your project directory which will contain the installed dependencies. Rojo","keywords":""},{"title":"NetworkValue","type":0,"sectionRef":"#","url":"/roblox-utility/api/NetworkValue","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#properties","content":" "},{"title":"className​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#className","content":"&lt;/&gt; NetworkValue.className: string  "},{"title":"Functions​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#functions","content":" "},{"title":"new​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#new","content":"&lt;/&gt; NetworkValue.new( name: string, parent: Instance , value: any? ) → NetworkValue Constructs a new NetworkValue object  "},{"title":"Destroy​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#Destroy","content":"&lt;/&gt; NetworkValue:Destroy() → () Deconstructs the NetworkValue object  "},{"title":"GetValue​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#GetValue","content":"&lt;/&gt; NetworkValue:GetValue(player: Player? ) → any? Returns the value of the NetworkValue object. If called on the server and a player is specified, the value for that specific player is returned. The player parameter is ignored on the client. -- Server local serverHealthValue = NetworkValue.new(&quot;PlayerHealth&quot;, workspace, 100) serverHealthValue:SetValue(80) serverHealthValue:SetValue(50, player1) serverHealthValue:GetValue() -- 80 serverHealthValue:GetValue(player1) -- 50 -- Player1 Client local clientHealthValue = NetworkValue.new(&quot;PlayerHealth&quot;, workspace) clientHealthVlaue:GetValue() -- 50 -- Other Client(s) local clientHealthValue = NetworkValue.new(&quot;PlayerHealth&quot;, workspace) clientHealthVlaue:GetValue() -- 80   "},{"title":"SetValue​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#SetValue","content":"This item only works when running on the server. Server &lt;/&gt; NetworkValue:SetValue( value: any?, player: Player? ) → () Sets the value of the NetworkValue object. If a player is specified, the value for that specific player is set. local healthValue = NetworkValue.new(&quot;PlayerHealth&quot;, workspace, 100) healthValue:SetValue(80) healthValue:SetValue(50, player1)  "},{"title":"Event","type":0,"sectionRef":"#","url":"/roblox-utility/api/Event","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#types","content":" "},{"title":"EventConnection​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#EventConnection","content":"&lt;/&gt; interface EventConnection { Connected: boolean Disconnect: () → () } An interface that respresents a connection to an event. An object which conforms to this interface is returned by the Event:Connect method. This EventConnection object can be used to disconnect the callback from the event. A connection doesn't need to be destroyed after being disconnected. print(connection.Connected) -- true connection:Disconnect() print(connection.Connected) -- false  "},{"title":"Properties​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#properties","content":" "},{"title":"className​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#className","content":"&lt;/&gt; Event.className: string  "},{"title":"Functions​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#new","content":"&lt;/&gt; Event.new() → Event Constructs a new Event object  "},{"title":"Destroy​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#Destroy","content":"&lt;/&gt; Event:Destroy() → () Deconstructs the Event object  "},{"title":"Connect​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#Connect","content":"&lt;/&gt; Event:Connect(callback: (...any) → ()) → EventConnection Connects a callback to the event which is invoked when the event is fired. local event = Event.new() event:Connect(function(value) print(&quot;The event fired and passed the value:&quot;, value) end)   "},{"title":"Disconnect​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#Disconnect","content":"&lt;/&gt; Event:Disconnect(eventConnection: EventConnection) → () Disconnects a callback from the event. caution This is called automatically when an EventConnection is disconnected. It's not necessary to call this manually.  "},{"title":"Fire​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#Fire","content":"&lt;/&gt; Event:Fire(...: any) → () Fires the event with the given arguments. local event = Event.new() event:Connect(function(value) print(&quot;The event fired and passed the value:&quot;, value) end) event:Fire(&quot;Hello, world!&quot;)  "},{"title":"NetworkRequest","type":0,"sectionRef":"#","url":"/roblox-utility/api/NetworkRequest","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#properties","content":" "},{"title":"className​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#className","content":"&lt;/&gt; NetworkRequest.className: string  "},{"title":"Functions​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#functions","content":" "},{"title":"new​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#new","content":"&lt;/&gt; NetworkRequest.new( name: string, parent: Instance , callback: (...any) → (...any)? ) → NetworkEvent Constructs a new NetworkRequest object  "},{"title":"Destroy​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#Destroy","content":"&lt;/&gt; NetworkRequest:Destroy() → () Deconstructs the NetworkRequest object  "},{"title":"Connect​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#Connect","content":"This item only works when running on the server. Server &lt;/&gt; NetworkRequest:Connect(callback: (...any) → (...any)) → () Connects a callback to the NetworkRequest which is invoked when the request is invoked. local serverRequest = NetworkRequest.new(&quot;MyNetworkRequest&quot;, workspace) serverRequest:Connect(function(player, value) print(&quot;The client passed the value:&quot;, value) return &quot;Thank you, Client!&quot; end   "},{"title":"Invoke​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#Invoke","content":"This item only works when running on the client. Client &lt;/&gt; NetworkRequest:Invoke(...: any) → ...any Invokes the NetworkRequest on the server and returns the response. local clientRequest = NetworkRequest.new(&quot;MyNetworkRequest&quot;, workspace) local value = clientRequest:Invoke() print(&quot;The server responded with:&quot;, value)  "},{"title":"NetworkEvent","type":0,"sectionRef":"#","url":"/roblox-utility/api/NetworkEvent","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#types","content":" "},{"title":"EventConnection​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#EventConnection","content":"&lt;/&gt; interface EventConnection { Connected: boolean Disconnect: () → () } An interface that respresents a connection to an event. An object which conforms to this interface is returned by the NetworkEvent:Connect method. This EventConnection object can be used to disconnect the callback from the event. A connection doesn't need to be destroyed after being disconnected. print(connection.Connected) -- true connection:Disconnect() print(connection.Connected) -- false  "},{"title":"Properties​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#properties","content":" "},{"title":"className​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#className","content":"&lt;/&gt; NetworkEvent.className: string  "},{"title":"Functions​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#functions","content":" "},{"title":"new​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#new","content":"&lt;/&gt; NetworkEvent.new( name: string, parent: Instance ) → NetworkEvent Constructs a new NetworkEvent object  "},{"title":"Destroy​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#Destroy","content":"&lt;/&gt; NetworkEvent:Destroy() → () Deconstructs the NetworkEvent object  "},{"title":"Connect​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#Connect","content":"&lt;/&gt; NetworkEvent:Connect(callback: (...any) → ()) → EventConnection Connects a callback to the NetworkEvent which is invoked when the event is fired.  "},{"title":"FireServer​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#FireServer","content":"This item only works when running on the client. Client &lt;/&gt; NetworkEvent:FireServer(...: any) → () Fires the NetworkEvent on the client, passing the given arguments to the server event:FireServer(&quot;Hello, World!&quot;)   "},{"title":"FireClient​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#FireClient","content":"This item only works when running on the server. Server &lt;/&gt; NetworkEvent:FireClient( player: Player , ...: any ) → () Fires the NetworkEvent on the server, passing the given arguments to the players client event:FireClient(player, &quot;Hello, World!&quot;)   "},{"title":"FireFilteredClients​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#FireFilteredClients","content":"This item only works when running on the server. Server &lt;/&gt; NetworkEvent:FireFilteredClients( predicate: (player: Player ) → boolean, ...: any ) → () Fires the NetworkEvent on the server, passing the given arguments to player clients that pass the given predicate check event:FireFilteredClients(function(player) return player.Team == game.Teams.Heroes end, &quot;Hello, World!&quot;)   "},{"title":"FireAllClients​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#FireAllClients","content":"This item only works when running on the server. Server &lt;/&gt; NetworkEvent:FireAllClients(...: any) → () Fires the NetworkEvent on the server, passing the given arguments to all clients event:FireAllClients(&quot;Hello, World!&quot;)  "}]