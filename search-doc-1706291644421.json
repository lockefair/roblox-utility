[{"title":"Connection","type":0,"sectionRef":"#","url":"/roblox-utility/api/Connection","content":"On this page Connection The Connection package provides access the following network modules. NetworkEvent NetworkRequest NetworkValue To begin using the package, require it and access the various modules through the returned table. local Connection = require(Packages.Connection) local NetworkEvent = Connection.NetworkEvent local NetworkRequest = Connection.NetworkRequest local NetworkValue = Connection.NetworkValue ","keywords":""},{"title":"Roblox Utility","type":0,"sectionRef":"#","url":"/roblox-utility/docs/intro","content":"Roblox Utility A collection of utility modules that can be used to enhance your Roblox game development experience. Installation To install the packages in this repository you can use the Wally package manager. After installing Wally, navigate to your project directory and run wally init – this will generate the wally.toml file. You can add the roblox-utility modules to the generated wally.toml file as dependencies. After adding the modules to your dependecy list, run wally install. Wally will subsequently generate a Packages folder in your project directory which will contain the installed dependencies.","keywords":""},{"title":"EventConnection","type":0,"sectionRef":"#","url":"/roblox-utility/api/EventConnection","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"EventConnection","url":"/roblox-utility/api/EventConnection#types","content":" "},{"title":"Self​","type":1,"pageTitle":"EventConnection","url":"/roblox-utility/api/EventConnection#Self","content":"&lt;/&gt; type Self = EventConnection  "},{"title":"Properties​","type":1,"pageTitle":"EventConnection","url":"/roblox-utility/api/EventConnection#properties","content":" "},{"title":"className​","type":1,"pageTitle":"EventConnection","url":"/roblox-utility/api/EventConnection#className","content":"Static &lt;/&gt; EventConnection.className: string Static property that defines the class name of the NetworkEvent object  "},{"title":"connected​","type":1,"pageTitle":"EventConnection","url":"/roblox-utility/api/EventConnection#connected","content":"&lt;/&gt; EventConnection.connected: boolean Whether or not the EventConnection object is connected to the event "},{"title":"Functions​","type":1,"pageTitle":"EventConnection","url":"/roblox-utility/api/EventConnection#functions","content":" "},{"title":"new​","type":1,"pageTitle":"EventConnection","url":"/roblox-utility/api/EventConnection#new","content":"Static &lt;/&gt; EventConnection.new(event: Event) → EventConnection Constructs a new EventConnection object caution Do not construct this object manually. Use Event:Connect instead.  "},{"title":"destroy​","type":1,"pageTitle":"EventConnection","url":"/roblox-utility/api/EventConnection#destroy","content":"&lt;/&gt; EventConnection:destroy() → () Deconstructs the EventConnection object  "},{"title":"disconnect​","type":1,"pageTitle":"EventConnection","url":"/roblox-utility/api/EventConnection#disconnect","content":"&lt;/&gt; EventConnection:disconnect() → () Disconnects the EventConnection object from the event and deconstructs it "},{"title":"Event","type":0,"sectionRef":"#","url":"/roblox-utility/api/Event","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#types","content":" "},{"title":"EventConnection​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#EventConnection","content":"&lt;/&gt; interface EventConnection { connected: boolean disconnect: () → () } An interface that respresents a connection to an event. An object which conforms to this interface is returned by the Event:connect method. This EventConnection object can be used to disconnect the callback from the event. print(connection.connected) -- true connection:disconnect() print(connection.connected) -- false   "},{"title":"Self​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#Self","content":"&lt;/&gt; type Self = Event  "},{"title":"Properties​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#properties","content":" "},{"title":"className​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#className","content":"Static &lt;/&gt; Event.className: string Static property that defines the class name of the NetworkEvent object "},{"title":"Functions​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#new","content":"Static &lt;/&gt; Event.new() → Event Constructs a new Event object  "},{"title":"destroy​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#destroy","content":"&lt;/&gt; Event:destroy() → () Deconstructs the Event object  "},{"title":"connect​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#connect","content":"&lt;/&gt; Event:connect(callback: (...any) → ()) → EventConnection Connects a callback to the event which is invoked when the event is fired. local event = Event.new() event:connect(function(...) print(&quot;The event fired and passed the values:&quot;, ...) end) event:fire(1, 2, 3)   "},{"title":"disconnect​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#disconnect","content":"&lt;/&gt; Event:disconnect(eventConnection: EventConnection) → () Disconnects a callback from the event. caution This is called automatically when an EventConnection is disconnected. It's not necessary to call this manually.  "},{"title":"fire​","type":1,"pageTitle":"Event","url":"/roblox-utility/api/Event#fire","content":"&lt;/&gt; Event:fire(...: any) → () Fires the event with the given arguments. event:fire(&quot;Hello, world!&quot;)  "},{"title":"NetworkRequest","type":0,"sectionRef":"#","url":"/roblox-utility/api/NetworkRequest","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#types","content":" "},{"title":"Self​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#Self","content":"&lt;/&gt; type Self = NetworkRequest  "},{"title":"Properties​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#properties","content":" "},{"title":"className​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#className","content":"Static &lt;/&gt; NetworkRequest.className: string Static property that defines the class name NetworkRequest. "},{"title":"Functions​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#functions","content":" "},{"title":"new​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#new","content":"Static &lt;/&gt; NetworkRequest.new( name: string,-- The name of the NetworkRequest instance which must match on the client and server parent: Instance ,-- The parent of the NetworkRequest instance which must match on the client and server callback: ( player: Player , ...any ) → (...any)?-- The callback to be called when the request is invoked ) → NetworkRequest Constructs a new NetworkRequest object.  "},{"title":"destroy​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#destroy","content":"&lt;/&gt; NetworkRequest:destroy() → () Deconstructs the NetworkRequest object.  "},{"title":"setCallback​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#setCallback","content":"This item only works when running on the server. Server &lt;/&gt; NetworkRequest:setCallback( callback: ( player: Player , ...any ) → (...any)?-- The callback to be called when the request is invoked ) → () Sets the callback for the NetworkRequest which is called when the request is invoked. The callback can be set to nil. local serverRequest = NetworkRequest.new(&quot;MyNetworkRequest&quot;, workspace) serverRequest:setCallback(function(player, value) print(&quot;The client passed the value:&quot;, value) return &quot;Thank you, Client!&quot; end   "},{"title":"invoke​","type":1,"pageTitle":"NetworkRequest","url":"/roblox-utility/api/NetworkRequest#invoke","content":"This item only works when running on the client. Client &lt;/&gt; NetworkRequest:invoke( ...: any-- The arguments to pass to the server ) → ...any Invokes the NetworkRequest on the server and returns the response. local clientRequest = NetworkRequest.new(&quot;MyNetworkRequest&quot;, workspace) local value = clientRequest:invoke() print(&quot;The server responded with:&quot;, value)  "},{"title":"NetworkEvent","type":0,"sectionRef":"#","url":"/roblox-utility/api/NetworkEvent","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#types","content":" "},{"title":"EventConnection​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#EventConnection","content":"&lt;/&gt; interface EventConnection { connected: boolean disconnect: () → () } An interface that respresents a connection to an event. An object which conforms to this interface is returned by the NetworkEvent:connect method. This EventConnection object can be used to disconnect the callback from the event. print(connection.connected) -- true connection:disconnect() print(connection.connected) -- false   "},{"title":"Self​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#Self","content":"&lt;/&gt; type Self = NetworkEvent  "},{"title":"Properties​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#properties","content":" "},{"title":"className​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#className","content":"Static &lt;/&gt; NetworkEvent.className: string Static property that defines the class name NetworkEvent "},{"title":"Functions​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#functions","content":" "},{"title":"new​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#new","content":"Static &lt;/&gt; NetworkEvent.new( name: string,-- The name of the NetworkEvent instance which must match on the client and server parent: Instance ,-- The parent of the NetworkEvent instance which must match on the client and server reliable: boolean?-- Whether or not the event should be reliable. Defaults to true ) → NetworkEvent Constructs a new NetworkEvent object. The 'reliable' parameter is defined by the server and ignored by the client.  "},{"title":"destroy​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#destroy","content":"&lt;/&gt; NetworkEvent:destroy() → () Deconstructs the NetworkEvent object  "},{"title":"connect​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#connect","content":"&lt;/&gt; NetworkEvent:connect( callback: (...any) → ()-- The callback to be called when the event is fired ) → EventConnection Connects a callback to the NetworkEvent which is invoked when the event is fired. note When connecting on the server, the first argument passed to the callback is always the player that fired the event. -- Client clientEvent:connect(function(...) print(&quot;The event fired and passed the values:&quot;, ...) end) -- Server serverEvent:connect(function(player, ...) print(&quot;The event was fired by &quot; .. player .. &quot; and passed the values:&quot;, ...) end)   "},{"title":"fireServer​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#fireServer","content":"This item only works when running on the client. Client &lt;/&gt; NetworkEvent:fireServer( ...: any-- The arguments to pass to the server ) → () Fires the NetworkEvent on the client, passing the given arguments to the server event:fireServer(&quot;Hello, server!&quot;)   "},{"title":"fireClient​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#fireClient","content":"This item only works when running on the server. Server &lt;/&gt; NetworkEvent:fireClient( player: Player ,-- The player to fire the event to ...: any-- The arguments to pass to the client ) → () Fires the NetworkEvent on the server, passing the given arguments to the players client event:fireClient(player, &quot;Hello, client!&quot;)   "},{"title":"fireFilteredClients​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#fireFilteredClients","content":"This item only works when running on the server. Server &lt;/&gt; NetworkEvent:fireFilteredClients( predicate: (player: Player ) → boolean,-- The predicate to check against each player ...: any-- The arguments to pass to the client ) → () Fires the NetworkEvent on the server, passing the given arguments to player clients that pass the given predicate check event:fireFilteredClients(function(player) return player.Team == game.Teams.Heroes end, &quot;You win!&quot;)   "},{"title":"fireAllClients​","type":1,"pageTitle":"NetworkEvent","url":"/roblox-utility/api/NetworkEvent#fireAllClients","content":"This item only works when running on the server. Server &lt;/&gt; NetworkEvent:fireAllClients( ...: any-- The arguments to pass to the clients ) → () Fires the NetworkEvent on the server, passing the given arguments to all clients event:fireAllClients(1, 2, 3)  "},{"title":"NetworkValue","type":0,"sectionRef":"#","url":"/roblox-utility/api/NetworkValue","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#types","content":" "},{"title":"EventConnection​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#EventConnection","content":"&lt;/&gt; interface EventConnection { connected: boolean disconnect: () → () } An interface that respresents a connection to an event. An object which conforms to this interface is returned by the NetworkValue:connect method. This EventConnection object can be used to disconnect the callback from the event. print(connection.connected) -- true connection:disconnect() print(connection.connected) -- false   "},{"title":"Self​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#Self","content":"&lt;/&gt; type Self = NetworkValue  "},{"title":"Properties​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#properties","content":" "},{"title":"className​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#className","content":"Static &lt;/&gt; NetworkValue.className: string Static property that defines the class name NetworkValue. "},{"title":"Functions​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#functions","content":" "},{"title":"new​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#new","content":"Static &lt;/&gt; NetworkValue.new( name: string,-- The name of the NetworkValue instance which must match on the client and server parent: Instance ,-- The parent of the NetworkValue instance value: any?-- The initial value of the NetworkValue instance ) → NetworkValue Constructs a new NetworkValue object.  "},{"title":"destroy​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#destroy","content":"&lt;/&gt; NetworkValue:destroy() → () Deconstructs the NetworkValue object.  "},{"title":"connect​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#connect","content":"&lt;/&gt; NetworkValue:connect( callback: (value: any?) → ()-- The callback to be called when the value of the NetworkValue object changes ) → EventConnection Connects a callback that's called when the value of the NetworkValue object changes. local healthValue = NetworkValue.new(&quot;PlayerHealth&quot;, workspace, 100) healthValue:connect(function(value) print(&quot;The players health changed to:&quot;, value) end)   "},{"title":"getValue​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#getValue","content":"&lt;/&gt; NetworkValue:getValue( player: Player? -- The player to get the value for ) → any? Returns the value of the NetworkValue object. If called on the server and a player is specified, the value for that specific player is returned. note The player parameter is ignored on the client. The value returned is always the value of the NetworkValue object on the server, wether that is the global value or the value set specifically for the local player. -- Server serverValue:setValue(80) serverValue:setValue(50, player1) serverValue:getValue() -- 80 serverValue:getValue(player1) -- 50 -- Player1 Client clientValue:getValue() -- 50 -- Other Client(s) clientValue:getValue() -- 80   "},{"title":"setValue​","type":1,"pageTitle":"NetworkValue","url":"/roblox-utility/api/NetworkValue#setValue","content":"This item only works when running on the server. Server &lt;/&gt; NetworkValue:setValue( value: any?,-- The value to set player: Player? -- The player to set the value for ) → () Sets the value of the NetworkValue object. If a player is specified, the value for that specific player is set. local healthValue = NetworkValue.new(&quot;PlayerHealth&quot;, workspace, 100) healthValue:setValue(80) healthValue:setValue(50, player1)  "}]